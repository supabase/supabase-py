name: CI/CD

on:
  push:
    paths-ignore:
      - '.github/**'
      - '.devcontainer/**'
      - 'CHANGELOG.md'
      - 'MAINTAINERS.md'
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test / OS ${{ matrix.os }} / Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.3.2

      - name: Run Tests
        run: poetry run tests

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
  release-please:
    needs: test
    runs-on: ubuntu-latest
    name: "Bump version and create changelog"
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # needed for github actions bot to write to repo
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          target-branch: ${{ github.ref_name }}

      - if: ${{ steps.release.outputs }}
        id: versions
        run: |
          set -ex

          MAIN_RELEASE_VERSION=${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          RELEASE_VERSION="$MAIN_RELEASE_VERSION"
          RELEASE_NAME="v$RELEASE_VERSION"
          RELEASE_CREATED='${{ steps.release.outputs.release_created }}'
          PRS_CREATED='${{ steps.release.outputs.prs_created }}'
          PR_TITLE='${{ github.event.head_commit.message }}'

          echo "MAIN_RELEASE_VERSION=${MAIN_RELEASE_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_CREATED=${RELEASE_CREATED}" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_NAME=${RELEASE_NAME}" >> "${GITHUB_OUTPUT}"
          echo "PRS_CREATED=${PRS_CREATED}" >> "${GITHUB_OUTPUT}"
          echo "PR_TITLE=${PR_TITLE}" >> "${GITHUB_OUTPUT}"
  publish:
    needs: release-please
    if: ${{ startsWith(github.event.head_commit.message, 'chore(main)') && github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository_owner == 'supabase' }}
    runs-on: ubuntu-latest
    name: "Publish to PyPi"
    environment:
      name: pypi
      url: https://pypi.org/p/supabase
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write # needed for github actions bot to write to repo
    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3

      - name: Install dependencies
        run: poetry install

      - name: Build package dist directory
        run: poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
